swagger: '2.0'
info:
  version: '1.0.0'
  title: 'AI_Project'
  description: 'Swagger for AI_Project API Management'
  
  license:
    name: GNU Affero General Public License v3.0
    url: https://www.gnu.org/licenses/agpl-3.0.html
  
# Added by API Auto Mocking Plugin
# host: i02a401.p.ssafy.io
# host: localhost:8000
# basePath: /
# schemes:
#  - http
 
tags: 
- name: USER LOGIN
  description: USER API
- name: USER INFO
  description: USER API
- name: USER FOLLOW
  description: USER API

  
definitions:
  signin_Request:
    type: object
    required:
    - email
    - password
    properties:
      email:
        type: string
        description: 사용자 E-mail
      password:
        type: string
        description: 사용자 password
        
  social-signin_Request:
    type: object
    required:
    - email
    - password
    properties:
      email:
        type: string
        description: 사용자 E-mail
      password:
        type: string
        description: 사용자 password
  
  signup_Request:
    type: object
    required: 
    - email
    - password
    - name
    - nickname
    - address
    - birth
    - gender
    properties:
      email:
        type: string
        description: 사용자 E-mail
      password:
        type: string
        description: 사용자 Password
      name:
        type: string
        description: 사용자 이름
      nickname:
        type: string
        description: 사용자 닉네임
      address:
        type: string
        description: 사용자 실 거주지
      phone_num:
        type: string
        description: 사용자 전화번호
      birth:
        type: string
        description: 사용자 생일
      gender:
        type: string
        description: 사용자 성별
      description:
        type: string
        description: 사용자 자기소개
    
  read-user_Response:
    type: object
    required: 
    - email
    - password
    - name
    - nickname
    - address
    - age
    - gender
    properties:
      email:
        type: string
        description: 사용자 E-mail
      password:
        type: string
        description: 사용자 Password
      name:
        type: string
        description: 사용자 이름
      nickname:
        type: string
        description: 사용자 닉네임
      address:
        type: string
        description: 사용자 실 거주지
      phone_num:
        type: string
        description: 사용자 전화번호
      age:
        type: integer
        description: 사용자 나이
      gender:
        type: string
        description: 사용자 성별
      description:
        type: string
        description: 사용자 자기소개
        
  update-user_Request:
    type: object
    required: 
    - name
    - nickname
    - address
    - age
    - gender
    properties:
      name:
        type: string
        description: 사용자 이름
      nickname:
        type: string
        description: 사용자 닉네임
      address:
        type: string
        description: 사용자 실 거주지
      phone_num:
        type: string
        description: 사용자 전화번호
      age:
        type: integer
        description: 사용자 나이
      gender:
        type: string
        description: 사용자 성별
      description:
        type: string
        description: 사용자 자기소개
        
  update-password_Request:
    type: object
    required: 
    - password
    - new_password
    properties:
      password:
        type: string
        description: 이전 Password
      new_password:
        type: string
        description: 새로운 Password
        
  delete-user_Request:
    type: object
    required: 
    - email
    properties:
      email:
        type: string
        description: 삭제할 계정 E-mail
        
  follow-user-toggle_Request:
    type: object
    required:
    - following_email
    properties:
      following_email:
        type: string
        description: Following 이메일  
        
paths:
  /api/user/signin:
    post:
      tags:
      - USER LOGIN
      summary: 로그인 하기
      description: User Login
      produces:
      - application/json
      parameters:
      - in: body
        name: signin_body
        description: /user/signin
        schema:
          $ref: '#/definitions/signin_Request'
      
      responses:
        200:
          description: OK
  
  /api/user/social-signin:
    post:
      tags:
      - USER LOGIN
      summary: 소셜 로그인 하기
      description: User Social Login
      produces:
      - application/json
      parameters:
      - in: body
        name: create-user_body
        description: /user/create-user
        schema:
          $ref: '#/definitions/social-signin_Request'
      
      responses:
        200:
          description: OK
  
  /api/user/signup:
    post:
      tags:
      - USER LOGIN
      summary: 회원가입 하기 
      description: User Signup
      produces:
      - application/json
      parameters:
      - in: body
        name: create-user_body
        description: /user/signup
        schema:
          $ref: '#/definitions/signup_Request'
      
      responses:
        200:
          description: OK
          
  /api/user/{email}:
    get:
      tags:
      - USER INFO
      summary: 유저 정보 반환
      description: Read a User
      produces:
      - application/json
      parameters:
      - in: path
        name: email
        description: User E-mail what you want to find
        type: string
        required: true
        
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/read-user_Response'
            
    
  /api/user:
    get:
      tags:
      - USER INFO
      summary: 모든 유저 정보 반환(폐기 예정)
      description: Read all User
      produces:
      - application/json
        
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/read-user_Response'

    put:
      tags:
      - USER INFO
      summary: 유저 정보 업데이트
      description: Update User Info
      produces:
      - application/json
      parameters:
      - in: body
        name: update-user_body
        description: /user/update-user
        schema:
          $ref: '#/definitions/update-user_Request'
      
      responses:
        200:
          description: OK

    delete:
      tags:
      - USER INFO
      summary: 유저 회원 탈퇴
      description: Delete User Info
      produces:
      - application/json
      parameters:
      - in: body
        name: delete-user_body
        description: /user/delete-user
        schema:
          $ref: '#/definitions/delete-user_Request'
          
      responses:
        200:
          description: OK
  
  /api/user/password:
    put:
      tags:
      - USER INFO
      summary: 비밀번호 변경
      description: Update User Password
      produces:
      - application/json
      parameters:
      - in: body
        name: update-password_body
        description: /user/password
        schema:
          $ref: '#/definitions/update-password_Request'
          
      responses:
        200:
          description: OK
          

  /api/user/follow-user-toggle:
    post:
      tags:
      - USER FOLLOW
      summary: 팔로우 맺기/해제(토글)
      description: Follow or Unfollow User
      produces:
      - application/json
      parameters:
      - in: body
        name: follow-user-toggle_body
        description: /user/follow-user-toggle
        schema:
          $ref: '#/definitions/follow-user-toggle_Request'
          
      responses:
        200:
          description: OK

  /api/user/following-user:
    get:
      tags:
      - USER FOLLOW
      summary: 팔로잉 멤버 반환
      description: return followig user
      produces:
      - application/json
          
      responses:
        200:
          description: OK

  /api/user/follower-user:
    get:
      tags:
      - USER FOLLOW
      summary: 팔로워 멤버 반환
      description: return follower user
      produces:
      - application/json
          
      responses:
        200:
          description: OK


# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /SupergrammerKim/AI_Project/1.0.0
schemes:
 - https
 - http